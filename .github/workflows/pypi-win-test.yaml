name: pypi-win-test

on:
  workflow_dispatch:

env:
  PACKAGE_NAME: clarabel
  PYTHON_VERSION: "3.7" # to build abi3 wheels
  PYPI_TARGET: pypi # use "testpypi" for testing, "pypi" otherwise

# NB: uncomment "if" lines below to skip compilation except on version tagging

jobs:

  windows:
    runs-on: windows-latest
    # if: "startsWith(github.ref, 'refs/tags/v')"
    strategy:
      matrix:
        #target: [x64, x86]
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ matrix.target }}

      # - name: Install Rust toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     profile: minimal
      #     default: true

      - name: Install cargo-vcpkg
        run: >
          cargo install cargo-vcpkg 
          && vcpkg install openblas:x64-windows-static-md
          && vcpkg install lapack:x64-windows-static-md
          && vcpkg integrate install

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --target x86_64-pc-windows-msvc --release --out dist -i python${{ env.PYTHON_VERSION }} --features "python,sdp-openblas,_openblas_git_config,openblas-src/system"

      - name: Install and test built wheel
        shell: bash
        run: |
          python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          python -c "import clarabel"
          python examples/python/example_qp.py 
          python examples/python/example_sdp.py 
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
