name: pypi

on:
  workflow_dispatch:

env:
  PACKAGE_NAME: clarabel
  PYTHON_VERSION: "3.7" # to build abi3 wheels
  PYPI_TARGET: pypi # use "testpypi" for testing, "pypi" otherwise

# NB: uncomment "if" lines below to skip compilation except on version tagging

jobs:

  macos:
    runs-on: macos-latest
    # if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --features python -i python${{ env.PYTHON_VERSION }}
      - name: Install built wheel - x86_64
        run: |
          pip install --upgrade pip
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          python -c "import clarabel"
          python examples/python/example_qp.py 
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist --features python -i python${{ env.PYTHON_VERSION }}
      - name: Install built wheel - universal2
        run: |
          pip install --upgrade pip
          pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
          python -c "import clarabel"
          python examples/python/example_qp.py 
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
